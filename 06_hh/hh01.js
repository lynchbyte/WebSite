import*as THREE from"../../js/three.module.js";import{XRSuppQry}from"./06_js/hh01_buttonsXR.mjs";import{OrbitControls}from"../../js/OrbitControls.mjs";import{addLights,addFloor,addMoon,addSkyDome}from"./06_js/hh01_basics.mjs";import{loadModels}from"./06_js/hh01_loadModels.mjs";import{makeTextCentJus}from"./06_js/hh01_makeTextCen.mjs";import{addSparkle,addBat}from"./06_js/hh01_particle.mjs";window.THREE=THREE;export const scene=new THREE.Scene;export const main=new THREE.Group;export const sparkle=[];export const batAnim=[];export const mvDw=[];export const txtArr=[];export let camera;export let controller;export const clickRoom=[];const raycaster=new THREE.Raycaster,intersected=[];export const tempMatrix=new THREE.Matrix4;let container;export let renderer;export let mixer;export const mixers=[];const clock=new THREE.Clock,soundAmb=new Howl({src:["06_media/audio/PorchCat_MSG.ogg"],volume:.05}),soundClick=new Howl({src:["06_media/audio/LV-HTIS Beeps Simple 03.wav"],volume:.05});function init(){container=document.createElement("div"),document.body.appendChild(container);const e=new THREE.Color(1381407);scene.fog=new THREE.Fog(e,10,150),(camera=new THREE.PerspectiveCamera(50,window.innerWidth/window.innerHeight,.1,1200)).position.set(0,1.6,1.5),scene.add(main),main.name="main",main.position.set(0,0,-5),mvDw.push(main),addLights(),addFloor(),addMoon(),addSkyDome(),loadModels(),addSparkle(),addBat(),makeTextCentJus("Happy","hhTxt1",.5,.07,16753920,-2,4,-5,0,0,0),makeTextCentJus("Halloween","hhTxt2",.5,.07,16753920,-2,3.275,-5,0,0,0),soundAmb.play();const t=new OrbitControls(camera,container);t.target.set(0,1.6,0),t.update(),(renderer=new THREE.WebGLRenderer({antialias:!0})).setPixelRatio(window.devicePixelRatio),renderer.setSize(window.innerWidth,window.innerHeight),renderer.shadowMap.enabled=!0,renderer.xr.enabled=!0,container.appendChild(renderer.domElement),XRSuppQry(),(controller=renderer.xr.getController(0)).name="controller",scene.add(controller);const n=new THREE.LineBasicMaterial({color:0}),o=(new THREE.BufferGeometry).setFromPoints([new THREE.Vector3(0,0,0),new THREE.Vector3(0,0,-1)]),r=new THREE.Line(o,n);r.name="line",r.scale.z=5,controller.add(r.clone()),window.addEventListener("resize",onWindowResize,!1),controller.addEventListener("selectstart",onSelectStart),controller.addEventListener("selectend",onSelectEnd),document.addEventListener("click",()=>{}),console.log(scene)}function onPlayLoop(){actions.runLeft.playLoop()}function onWindowResize(){camera.aspect=window.innerWidth/window.innerHeight,camera.updateProjectionMatrix(),renderer.setSize(window.innerWidth,window.innerHeight)}function intersectObjects(e){if(void 0!==e.userData.selected)return;const t=e.getObjectByName("line"),n=getIntersections(e);if(n.length>0){const e=n[0],o=e.object;intersected.push(o),t.scale.z=e.distance}else t.scale.z=5}function getIntersections(e){return tempMatrix.identity().extractRotation(e.matrixWorld),raycaster.ray.origin.setFromMatrixPosition(e.matrixWorld),raycaster.ray.direction.set(0,0,-1).applyMatrix4(tempMatrix),raycaster.intersectObjects(clickRoom,!0)}function cleanIntersected(){for(;intersected.length;){intersected.pop()}}function onSelectStart(e){soundClick.play();const t=e.target,n=getIntersections(t);if(n.length>0){const e=n[0];tempMatrix.getInverse(t.matrixWorld);const o=e.object;switch(o.name){case"exit":scene.remove(o),window.location.href=window.location.href}}}function onSelectEnd(e){e.target}function animate(){renderer.setAnimationLoop(render)}function update(){const e=(new Date).getTime(),t=clock.getDelta();for(let t=0;t<txtArr.length;t++){txtArr[t].material.opacity=0+Math.sin(5e-5*e)}main.rotation.y=5e-5*e;for(let e=0;e<sparkle.length;e++){const t=sparkle[e];"sprk"==t.name&&(t.material.rotation+=.015),t.position.add(t.userData.velocity),(t.position.x<-25||t.position.x>25)&&(t.position.x=THREE.Math.clamp(t.position.x,-25,25),t.userData.velocity.x=-t.userData.velocity.x),(t.position.y<-.5||t.position.y>25)&&(t.position.y=THREE.Math.clamp(t.position.y,5,25),t.userData.velocity.y=-t.userData.velocity.y),(t.position.z<-25||t.position.z>25)&&(t.position.z=THREE.Math.clamp(t.position.z,0,25),t.userData.velocity.z=-t.userData.velocity.z)}for(let e=0;e<mixers.length;++e)mixers[e].update(t);for(let e=0;e<batAnim.length;e++){const t=batAnim[e];t.translateX(.001),t.translateY(.0025),t.translateZ(-.01),t.position.z<-29&&(t.visible=!1)}}function render(){update(),cleanIntersected(),intersectObjects(controller),renderer.render(scene,camera)}init(),animate();